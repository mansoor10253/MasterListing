service: MasterListing
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-1
  stage: ${opt:stage, 'dev'}

  iamRoleStatements:
    - Effect: Allow
      Action: "*"
      Resource: "*"
 
  environment:
    META_SYNC_LISTING_TABLE: meta-sync-listing-${self:provider.stage}
    STAGE: ${opt:stage, 'dev'}

package:
  excludeDevDependencies: true

functions:
  buildMasterSchema:
    handler: handlers/masterSchema.handler
    events:
      - http:
          path: /buildMasterSchema
          method: post
          cors: true

  insertTableData:
    handler: handlers/insertTableData.handler
    events:
      - http:
          path: /insertTableData
          method: post
          cors: true        
  
  getListingData:
    handler: handlers/getListingData.handler
    events:
      - http:
          path: /getListingData
          method: get
          cors: true

  openapi:
    handler: handlers/docs.openapi
    events:
        - http:
            path: /openapi.json
            method: get
            cors: true

  docs:
    handler: handlers/docs.docs
    events:
      - http:
          path: /docs
          method: get
          cors: true
        
resources:
  Resources:
    
    UserCouponTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: meta-sync-listing-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: tableName
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: tableName
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE


custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: false
    target: node20
    platform: node

  serverless-offline:
    watch:
      ignore:
        - node_modules/**

plugins:
  - serverless-offline

build:
  esbuild: true



